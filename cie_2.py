# -*- coding: utf-8 -*-
"""cie-2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VFsaSOLCL0ilLXYZjbRBfM4_Mn2jzrD2
"""

import pandas as pd
data=pd.read_csv('/content/titanic.cav.csv')
print(data)

data.head()

data.describe()

data.info()

data.shape

data.isnull().sum()

data.duplicated().sum()

data['Pclass'].unique()

data['Sex'].unique()

import numpy as np
import pandas as pd
from scipy import stats
mean=np.mean(data['Age'])
median=np.median(data['Age'])
mode=stats.mode(data['Age'],keepdims=True).mode[0]
mean1=np.mean(data['Fare'])
median1=np.median(data['Fare'])
mode1=stats.mode(data['Fare'],keepdims=True).mode[0]
print('central tendency')
print('mean of Age:',mean)
print('median of Age:',median)
print('mode of Age:',mode)
print('mean of Fare:',mean1)
print('median of Fare:',median1)
print('mode of Fare:',mode1)

import pandas as pd
import matplotlib.pyplot as plt
data=pd.read_csv('/content/titanic.cav.csv')
data['Survived']=data['Survived'].replace({0:'Survived',1:'Not Survived'})
data['Survived']
grouped_data=data.groupby(['Survived','Pclass'])['PassengerId'].count().unstack()
grouped_data.plot(kind='bar',figsize=(10,6))
plt.title('Survivel count by Pclass')
plt.xlabel('Survivel')
plt.ylabel('Count')
plt.xticks(ticks=[0,1],labels=['Survived','Not Survived'],rotation=0)
plt.legend(title='Pclass')
plt.show()

import pandas as pd
data="/content/titanic.cav.csv"
titanic_df=pd.read_csv(data)
null_values=titanic_df.isnull().sum()
titanic_filled_df=titanic_df.fillna(titanic_df.mean(numeric_only=True))
print(null_values)
print(titanic_filled_df)
null_values,titanic_filled_df.head(5)

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
data=pd.read_csv('/content/titanic.cav.csv')
mean=np.mean(data['Age'])
std=np.std(data['Age'])
print(mean)
print(std)
threshold=3
outliers=[]
for i in data['Age']:
  z_score=(i-mean)/std
  if z_score>threshold:
    outliers.append(i)
print(outliers)
sns.boxplot(data['Age'])
plt.title('boxplot')
plt.xlabel('outliers')
plt.ylabel('Age')
plt.show()